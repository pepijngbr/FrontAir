name: Laravel API

on:
  push:
    branches: [ 'main' ]
    paths: [ 'apiFrontAir/**' ]
  pull_request:
    branches: [ 'main' ]
    paths: [ 'apiFrontAir/**' ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Check for changes in apiFrontAir directory
        id: check_changes
        run: |
          # Fetch the previous commit
          git fetch origin main
          # Check for changes in the specific directory
          if [ $(git diff --name-only HEAD HEAD~1 | grep '^apiFrontAir/') ]; then
            echo "Changes detected in apiFrontAir directory"
            echo "CHANGES=true" >> $GITHUB_ENV
          else
            echo "No changes detected in apiFrontAir directory"
            echo "CHANGES=false" >> $GITHUB_ENV
          fi

      - name: Check composer version
        run: composer -v
        
      - name: Verify node version
        run: node -v
        
      - name: Verify npm version
        run: npm -v

      - name: Install composer packages
        run: composer install
        working-directory: apifrontair

      #      - name: Linter (pint)
      #        run: pint
      #        working-directory: apifrontair

      - name: Run tests
        run: php artisan test
        working-directory: apifrontair

      - name: Optimizing Configuration Loading
        run: php artisan config:cache

      - name: Discover and cache the application's events and listeners
        run: php artisan event:cache

      - name: Optimizing Route registration
        run: php artisan route:cache

      - name: Compile all of the application's Blade templates
        run: php artisan view:cache

      - name: Cache the framework bootstrap files
        run: php artisan optimize

      - name: Build the API
        run: npm run build
        working-directory: apifrontair

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-artifact
          path: apifrontair/dist

  deploy:
    runs-on: ubuntu-latest
    needs: [ 'build', 'release' ]
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-artifact

      # Move the dist folder to a clean build directory to isolate it
      - name: Move dist folder to a clean build directory
        run: |
          mkdir -p docker-build
          mv dist docker-build/

      - name: Create Dockerfile for dist deployment
        run: |
          echo 'FROM nginx:alpine' > docker-build/Dockerfile
          echo 'COPY ./dist /usr/share/nginx/html' >> docker-build/Dockerfile
          echo 'EXPOSE 80' >> docker-build/Dockerfile

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          cd docker-build
          docker build -t ${{ secrets.DOCKER_USERNAME }}/frontair-api:latest .

      # Push Docker image to Docker Hub
      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/frontair-api:latest

#  test:
#    runs-on: ubuntu-latest
##    met curl of phpunit
#
##    - name: Run API
##      if: ${{ env.CHANGES == 'true' }}
##      run: php artisan serve
##      working-directory: apiFrontAir
##
##    - name: Test API route
##      if: ${{ env.CHANGES == 'true' }}
##      run: |
##        curl http://localhost/api/flights
