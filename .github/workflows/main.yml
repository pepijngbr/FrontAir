name: Build & Deployment

on:
  push:
    branches: [ 'main' ]
  #    paths: [ 'FrontAir/**' ]
  pull_request:
    branches: [ 'main' ]
#    paths: [ 'FrontAir/**' ]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Set up Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: '20.11.0'

      - name: Install dependencies
        run: npm install
        working-directory: FrontAir

      - name: Verify node version
        run: node -v
        
      - name: Verify npm version
        run: npm -v

      - name: Linter
        run: npm run lint
        working-directory: FrontAir

#      - name: Run tests
#        run: npm run test
      #        working-directory: FrontAir

      - name: Build the application
        run: npm run build-only
        working-directory: FrontAir

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-artifact
          path: FrontAir/dist

  #  release:
  #    runs-on: ubuntu-latest
  #    needs: build
  #    steps:
  #      - name: Download build artifacts
  #        uses: actions/download-artifact@v3
  #        with:
  #          name: dist-artifact
  #
  #      - name: Create a Tag
  #        id: tag_creation
  #        run: |
  #          TAG=$(date +%Y%m%d%H%M%S)
  #          echo "Creating tag $TAG"
  #          git tag $TAG
  #          git push origin $TAG
  #          echo "::set-output name=TAG::$TAG"
  #
  #      - name: Create GitHub Release
  #        id: create_release
  #        uses: actions/create-release@v1
  #        with:
  #          tag_name: ${{ steps.tag_creation.outputs.TAG }}
  #          release_name: "Release ${{ steps.tag_creation.outputs.TAG }}"
  #          body: "Automated release of Vue.js application."
  #          draft: false
  #          prerelease: false
  #        env:
  #          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    runs-on: ubuntu-latest
    needs: [ 'build' ]
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-artifact

      - name: View files in dist artifact
        run: ls -l

#      - name: Deploy to GitHub Pages
#        uses: peaceiris/actions-gh-pages@v3
#        with:
#          github_token: ${{ secrets.GITHUB_TOKEN }}
#          publish_dir: FrontAir/dist

      - name: Deploy to GitHub Pages
        run: npm install -g gh-pages && npm run deploy

#      - name: Move dist folder to a clean build directory
#        run: |
#          mkdir -p docker-build
#          mv FrontAir/dist docker-build/
#
#      - name: Create Dockerfile for dist deployment
#        run: |
#          echo 'FROM nginx:alpine' > docker-build/Dockerfile
#          echo 'COPY ./dist /usr/share/nginx/html' >> docker-build/Dockerfile
#          echo 'EXPOSE 80' >> docker-build/Dockerfile
##
#      - name: Log in to Docker Hub
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}
#
#      - name: Build Docker image
#        run: |
#          cd docker-build
#          docker build -t ${{ secrets.DOCKER_USERNAME }}/frontair-app:latest .
#
#      - name: Push Docker image to Docker Hub
#        run: |
#          docker push ${{ secrets.DOCKER_USERNAME }}/frontair-app:latest
