name: Build & Deployment

on:
  push:
    branches: [ 'main' ]
  #    paths: [ 'FrontAir/**' ]
  pull_request:
    branches: [ 'main' ]
#    paths: [ 'FrontAir/**' ]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Set up Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: '20.11.0'

      - name: Install dependencies
        run: npm install
        working-directory: FrontAir

      - name: Verify node version
        run: node -v
        
      - name: Verify npm version
        run: npm -v

      - name: Linter
        run: npm run lint
        working-directory: FrontAir

#      - name: Run tests
#        run: npm run test
      #        working-directory: FrontAir

      - name: Build the application
        run: npm run build-only
        working-directory: FrontAir

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-artifact
          path: FrontAir/dist

#      - name: Deploy to GitHub Pages
#        uses: peaceiris/actions-gh-pages@v3
#        with:
  #          github_token: ${{ secrets.GITHUB_TOKEN }}
#          publish_dir: FrontAir/dist

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-artifact
        
      - name: Create a Tag
        id: tag_creation
        run: |
          TAG=$(date +%Y%m%d%H%M%S)
          echo "Creating tag $TAG"
          git tag $TAG
          git push origin $TAG
          echo "::set-output name=TAG::$TAG"

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.tag_creation.outputs.TAG }}  # This references the tag that triggered the workflow
          release_name: "Release ${{ steps.tag_creation.outputs.TAG }}"
          body: "Automated release of Vue.js application."
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  #      - name: Upload build artifacts
  #        uses: actions/upload-release-asset@v1
  #        with:
  #          upload_url: ${{ steps.create_release.outputs.upload_url }}
  #          asset_content_type: application/zip
  #          asset_path: FrontAir/dist
  #          asset_name: dist.zip

  deploy:
    runs-on: ubuntu-latest
    needs: [ 'build', 'release' ]
    steps:
#      - name: Download build artifacts
#        uses: actions/download-artifact@v3
#        with:
#          name: dist-artifact

#      - name: Deploy to GitHub Pages
#        uses: peaceiris/actions-gh-pages@v3
#        with:
#          github_token: ${{ secrets.GITHUB_TOKEN }}
#          publish_dir: FrontAir/dist

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

#      # Build the Docker image
#      - name: Build Docker image
#        run: |
#          docker build -t ${{ secrets.DOCKER_USERNAME }}/frontair-app:latest -f FrontAir/Dockerfile .
#
#      # Push the Docker image to Docker Hub
#      - name: Push Docker image to Docker Hub
#        run: |
#          docker push ${{ secrets.DOCKER_USERNAME }}/frontair-app:latest
